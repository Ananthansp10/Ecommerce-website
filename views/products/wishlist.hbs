{{#if products}}
<div class="container mx-auto px-4 py-8">
    <!-- Wishlist Header -->
    <h1 class="text-3xl font-bold mb-6 text-center text-gray-800">Your Wishlist</h1>

    <!-- Wishlist Items Section -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Wishlist Item Card -->
        {{#each products}}
        <div class="flex flex-col bg-white border rounded-lg shadow-lg p-4 relative hover:shadow-xl">
            <!-- Product Image -->
            <div class="flex justify-center mb-4">
                <img class="object-contain h-48 w-48" src="{{this.images.[0]}}" alt="Product Image">
            </div>
            
            <!-- Product Details -->
            <div class="flex flex-col gap-2">
                <h2 class="text-lg font-semibold text-gray-900 truncate">{{this.name}}</h2>
                <p class="text-gray-600 text-sm">Color: <span class="font-medium text-gray-800">{{this.colour}}</span></p>
                <p class="text-gray-600 text-sm">
                Price: 
                {{#if this.offerPrice}}
                <span class="line-through text-gray-500 text-sm">RS. {{this.price}}</span>
                <span class="ml-2 font-medium text-green-600">RS. {{this.offerPrice}}</span>
                {{else}}
                <span class="font-medium text-green-600">RS. {{this.price}}</span>
                {{/if}}
                </p>

            </div>

            <!-- Action Buttons -->
            <div class="mt-4 flex justify-between items-center">
                <button onclick="addToCart('{{this.productId}}')" class="bg-blue-500 text-white py-2 px-4 rounded-lg text-sm hover:bg-blue-600">Add to Cart</button>
                <button onclick="removeFromWish('{{this.productId}}')" class="text-red-500 hover:text-red-600" title="Remove from Wishlist">
                    <i class="fas fa-trash-alt text-lg"></i>
                </button>
            </div>
        </div>
        {{/each}}
    </div>
</div>
{{else}}
<div class="flex flex-col items-center justify-center min-h-screen bg-gray-100">
  <div class="bg-white rounded-lg shadow-lg p-8 max-w-md text-center">
    <svg
      class="mx-auto h-16 w-16 text-gray-400 mb-4"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      fill="currentColor"
    >
      <path
        fill-rule="evenodd"
        d="M12 3.75a6.375 6.375 0 00-4.516 10.853l-1.88 1.88a.75.75 0 001.06 1.06l1.88-1.88A6.375 6.375 0 1012 3.75zM6.75 12a5.25 5.25 0 1110.5 0 5.25 5.25 0 01-10.5 0z"
        clip-rule="evenodd"
      />
    </svg>
    <h1 class="text-xl font-semibold text-gray-800 mb-2">Your Wishlist is Empty</h1>
    <p class="text-gray-600 mb-6">
      Looks like you haven't added anything to your wishlist yet. Start exploring and save your favorites!
    </p>
    <a
      href="/"
      class="bg-blue-500 text-white px-4 py-2 rounded-lg shadow hover:bg-blue-600"
    >
      Browse Products
    </a>
  </div>
</div>
{{/if}}

<script>
  function removeFromWish(productId) {
  swal.fire({
    title: "Are you sure?",
    text: "Do you really want to remove this product from your wishlist?",
    icon: "warning",
    showCancelButton: true,
    confirmButtonText: "Yes, remove it!",
    cancelButtonText: "Cancel"
  }).then((result) => {
    if (result.isConfirmed) {
      fetch(`/users/removefromwish/${productId}`, {
        method: "POST"
      }).then((response) => response.json()).then((response) => {
        if(response.status){
          swal.fire({
            title: "Success!",
            text:response.message,
            icon: "success",
            button: "OK",
          }).then(() => {
            location.reload();
          });
        } else {
          swal.fire({
            title: "Error!",
            text: response.message,
            icon: "error",
            button: "OK",
          }).then(() => {
            location.reload();
          });
        }
      }).catch((error) => {
        swal({
          title: "Error!",
          text: "There was an issue with the request. Please try again.",
          icon: "error",
          button: "OK",
        });
      });
    }
  });
}

function addToCart(productId) {
  fetch(`/users/addtocart/${productId}`, {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
  .then(response => {
    if (response.ok) {
      return response.json();
    } else {
      return response.text();
    }
  })
  .then(data => {
    if (typeof data === 'string') {
      Swal.fire({
        title: 'Please login!',
        text: 'You need to login to add products to your cart.',
        icon: 'info',
        confirmButtonText: 'Go to Login',
        allowOutsideClick: false,
        showCancelButton: true,
        cancelButtonText: 'Cancel'
      }).then((result) => {
        if (result.isConfirmed) {
          location.href = '/users/login';
        }
      });
    } else if (data.status) {
      // Product successfully added
      Swal.fire({
        title: 'Success!',
        text: 'Product added to cart successfully!',
        icon: 'success',
        confirmButtonText: 'Continue Shopping',
        showCancelButton: true,
        cancelButtonText: 'Go to Cart'
      }).then((result) => {
        if (result.dismiss === Swal.DismissReason.cancel) {
          location.href = '/product/cartPage';
        } else {
          //location.href = '/';
          var count=document.getElementById("cartCount").innerText
          count=parseInt(count) || 0
          document.getElementById("cartCount").innerText=count+1
        }
      });
    } else {
      // Failed to add product
      Swal.fire({
        title: 'Error!',
        text: 'Failed to add product to cart.',
        icon: 'error',
        confirmButtonText: 'Try Again',
        timer: 2000
      });
    }
  })
  .catch(error => {
    console.log('Error adding to cart:', error);
    Swal.fire({
      title: 'Oops!',
      text: 'Something went wrong. Please try again.',
      icon: 'error',
      confirmButtonText: 'OK'
    });
  });
}
</script>
