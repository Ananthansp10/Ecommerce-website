{{#if data}}
<div class="container mx-auto px-4 py-8">
    <!-- Cart Section -->
    <div class="flex flex-col lg:flex-row justify-between space-y-6 lg:space-y-0 lg:space-x-8">
        <!-- Product List -->
        <div class="lg:w-3/4 bg-white p-6 rounded-lg shadow-lg overflow-y-scroll max-h-screen">
            <h2 class="text-2xl font-semibold mb-6">Your Cart</h2>

            <!-- Cart Item -->
            {{#each data}}
            <div class="flex justify-between items-center border-b pb-4 mb-4">
                <img src="{{this.images.[0]}}" alt="Product Image" class="w-24 h-24 object-cover rounded-lg">
                <div class="flex-1 ml-4">
                    <h3 class="text-lg font-semibold">{{this.productName}}</h3>
                    <p class="text-gray-600">Category: {{this.category}}</p>
                    {{#if this.offerPrice}}
                    <p class="text-gray-600">Price: {{this.offerPrice}}</p>
                    {{else}}
                    <p class="text-gray-600">Price: {{this.price}}</p>
                    {{/if}}
                    <p class="text-gray-600">Quantity: {{this.quantity}}</p>
                    <p class="text-gray-500 mt-1">Description: {{this.description}}</p>
                    {{#if this.isMinimumStockExceded}}
                    <p class="text-red-600 font-medium mt-1">Minimum Stock Exceeded</p>
                    {{else}}
                    {{#if this.inStock}}
                    <p class="text-green-600 font-medium mt-1">In Stock</p>
                    {{/if}}
                    {{#if this.limitedStock}}
                    <p class="text-yellow-600 font-medium mt-1">Limited Stock</p>
                    {{/if}}
                    {{#if this.outofStock}}
                    <p class="text-red-600 font-medium mt-1">Out Of Stock</p>
                    {{/if}}
                    {{/if}}
                    <div class="flex items-center mt-4">
                        <!-- Quantity Controls -->
                        <div class="flex items-center border rounded-lg overflow-hidden">
                            {{#if this.isQuantityGreaterThanOne}}
                            <button onclick="updateQuantity('{{this.productId}}',-1)" class="px-3 py-2 bg-gray-200 hover:bg-gray-300 text-gray-600 rounded-l-lg transition-colors duration-200">
                                <i class="fas fa-minus"></i>
                            </button>
                            {{/if}}
                            <input type="text" value="{{this.quantity}}" min="1" class="w-12 ml-0.5 text-center p-2 border-t border-b">
                            {{#if this.isIncrementButtonLessThanStock}}
                            <button onclick="updateQuantity('{{this.productId}}',1)" class="px-3 py-2 bg-gray-200 hover:bg-gray-300 text-gray-600 rounded-r-lg transition-colors duration-200">
                                <i class="fas fa-plus"></i>
                            </button>
                            {{/if}}
                        </div>
                        <span class="text-lg ml-4 font-semibold">Total : RS {{this.totalPrice}}</span>
                    </div>
                </div>
                <button onclick="deleteCartProduct('{{this.productId}}')" class="text-red-500 hover:text-red-700">
                    <i class="fas fa-trash"></i>
                </button>
            </div>
            {{/each}}

            <div class="text-right mt-4">
                <a class="text-blue-500 hover:underline" href="/">Continue Shopping</a>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="lg:w-1/4 bg-gray-100 p-6 rounded-lg shadow-lg">
            <h2 class="text-xl font-semibold mb-6">Price Summary</h2>

            <!-- Coupon Section -->
            <div class="mb-6">
                <h2 class="text-xl font-semibold mb-4">Apply Coupon</h2>
                <div class="flex items-center">
                    <input type="text" id="couponCode" class="flex-1 px-4 py-2 border border-gray-300 rounded-l-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Enter coupon code" />
                    <button onclick="applyCoupon()" class="bg-blue-500 text-white px-4 py-2 rounded-r-lg hover:bg-blue-600 transition-all">
                        Apply
                    </button>
                </div>
                <div class="mt-4 text-right">
                    <button onclick="showCoupons()" class="text-blue-500 hover:underline">
                        Add Coupon
                    </button>
                </div>
                 <div class="mt-4 text-right hidden" id="removeCoupon">
                    <button onclick=location.reload() class="text-red-600 hover:underline">
                        Remove Coupon
                    </button>
                </div>
            </div>

            <div class="flex justify-between mb-2 text-lg font-semibold">
                <span class="text-gray-700 font-semibold">Subtotal</span>
                <span class="text-gray-700 font-semibold">RS.{{subTotal}}</span>
            </div>
            <div class="flex justify-between mb-2 text-lg font-semibold">
                <span class="text-lg font-semibold">Shipping</span>
                <span class="text-lg font-semibold">RS.100</span>
            </div>
            <div class="flex justify-between mb-4 text-lg font-semibold">
                <span class="text-lg font-semibold">Tax</span>
                <span class="text-lg font-semibold">RS.50</span>
            </div>
            <div class="flex justify-between mb-4 text-md font-semibold">
                <span class="font-semibold text-red-600">Coupon Applied</span>
                <span class="font-semibold text-red-600" id="couponApplied"></span>
            </div>
            <div class="flex justify-between mb-4 text-md font-semibold">
                <span class="font-semibold text-red-600">Coupon Discount</span>
                <span class="font-semibold text-red-600" id="couponDiscount"></span>
            </div>
            <hr class="mb-4">
            <div class="flex justify-between text-lg font-semibold mb-6">
                <span>Total</span>
                <span id="total">{{totalAmount}}</span>
            </div>
            <button onclick="goToCheckOut()" class="bg-blue-500 text-white py-2 px-4 w-full rounded-lg hover:bg-blue-600 transition-all">Proceed to Checkout</button>
        </div>
    </div>
</div>

<!-- Modal for Viewing Coupons -->
<div id="couponModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-lg p-6">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-xl font-semibold">Available Coupons</h3>
            <button onclick="closeCouponModal()" class="text-gray-500 hover:text-gray-700">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <ul id="couponList" class="space-y-4">
            <!-- Coupons will be dynamically added here -->
        </ul>
        <button onclick="closeCouponModal()" class="bg-red-500 text-white px-4 py-2 mt-6 rounded-lg w-full hover:bg-gray-400 transition-all">Close</button>
    </div>
</div>

{{else}}
<div class="container mx-auto px-4 py-8">
    <div class="flex justify-center items-center min-h-screen">
        <div class="text-center bg-white p-8 rounded-lg shadow-lg w-full sm:w-2/3 md:w-1/2">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-20 h-20 text-gray-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M3 3L21 21M21 3L3 21"></path>
            </svg>
            <h2 class="text-2xl font-semibold text-gray-800 mb-4">No Products in Your Cart</h2>
            <p class="text-gray-600 mb-4">It seems your cart is empty. Start adding products to your cart to proceed.</p>
            <a href="/" class="text-blue-500 hover:underline">Continue Shopping</a>
        </div>
    </div>
</div>
{{/if}}

<script>
    let couponCode="no"
    let couponStatus=false
    let totalAmount=document.getElementById("total").innerText
    function applyCoupon() {
        couponCode = document.getElementById('couponCode').value;
        if (!couponCode) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Please enter the coupon code.',
                confirmButtonText: 'OK',
            });
        }else{
        fetch(`/users/applycoupon/${couponCode}/${totalAmount}`, {
            method: 'POST',
          })
            .then((response) => response.json())
            .then((data) => {
                if (data.status) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Coupon Applied',
                        text: `Discount applied successfully! ${data.amount} reduced from the total`,
                        confirmButtonText: 'OK',
                    }).then(() => {
                        let total=document.getElementById("total").innerText
                        total=parseFloat(total)
                        let diff=total-data.amount
                        totalAmount=diff
                        document.getElementById("total").innerText=diff
                        document.getElementById("couponApplied").innerText=couponCode
                        document.getElementById("couponDiscount").innerText=data.amount
                        couponStatus=true
                        document.getElementById("removeCoupon").classList.remove('hidden')
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text:data.message,
                        confirmButtonText: 'Try Again',
                    })
                }
            })
            .catch((error) => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An unexpected error occurred.',
                    confirmButtonText: 'Close',
                });
            });
        }
    }

    function showCoupons() {
        const modal = document.getElementById('couponModal');
        const couponList = document.getElementById('couponList');
        fetch('/users/getallcoupons')
            .then((response) => response.json())
            .then((coupons) => {
                couponList.innerHTML = '';
                if (coupons.length === 0) {
                    couponList.innerHTML = '<li class="text-gray-500 text-center">No coupons available</li>';
                } else {
                    coupons.forEach((coupon) => {
                        const listItem = document.createElement('li');
                        listItem.className = 'p-4 border border-gray-200 rounded-lg flex justify-between items-center';
                        listItem.innerHTML = `
                            <div>
                                <p class="text-gray-700 font-medium">${coupon.code}</p>
                                <p class="text-sm text-gray-500">Discount: RS ${coupon.discountValue}</p>
                                <p class="text-sm text-gray-500">Coupon Code: ${coupon.code}</p>
                            </div>
                            <button
                                onclick="selectCoupon('${coupon.code}')"
                                class="bg-blue-500 text-white px-3 py-1 rounded-lg hover:bg-blue-600"
                            >
                                Apply
                            </button>
                        `;
                        couponList.appendChild(listItem);
                    });
                }
            })
            .catch((error) => {
                console.error('Error fetching coupons:', error);
            });

        modal.classList.remove('hidden');
    }

    function selectCoupon(code) {
         if(couponStatus){
             Swal.fire({
            icon: 'error',
            title: 'Error',
            text: "Cannot Add the coupon first remove the existing coupon"
        }).then(()=>{
             closeCouponModal();
        })
        }else{
        document.getElementById('couponCode').value = code;
        closeCouponModal();
        }
    }

    function closeCouponModal() {
        const modal = document.getElementById('couponModal');
        modal.classList.add('hidden');
    }

    function deleteCartProduct(productId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "Do you really want to remove this product from your cart?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/users/deletecartproduct/${productId}`, {
                method: "POST"
            })
            .then(response => {
                if (response.status) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Deleted!',
                        text: 'Product deleted from cart successfully.',
                        confirmButtonText: 'OK'
                    }).then(()=>{
                        location.reload();
                    })
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Failed!',
                        text: 'Product could not be deleted from the cart.',
                        confirmButtonText: 'Try Again'
                    })
                }
            })
            .catch((error) => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An unexpected error occurred.',
                    confirmButtonText: 'Close'
                });
                console.error('Error:', error);
            });
        }
    });
}
    function updateQuantity(productId,value){
        fetch(`/users/updateproductquantity/${productId}/${value}`,{
            method:"POST"
        }).then((response)=>{
            if(response.status){
                location.reload();
            }else{
                location.reload();
            }
        })
    }

    function goToCheckOut(){
        location.href=`/users/checkout/${couponCode}/${totalAmount}`
    }
</script>
