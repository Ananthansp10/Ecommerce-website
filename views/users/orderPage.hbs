{{#if data}}
<div class="container mx-auto p-8">
  <!-- Order Header -->
  <h1 class="text-2xl font-semibold mb-6">Your Orders</h1>

  <!-- Order Table -->
  <div class="bg-white shadow-md rounded-lg overflow-hidden">
    <table class="min-w-full bg-white">
      <thead>
        <tr>
          <th class="w-16 py-2">SI No</th>
          <th class="w-24 py-2">Image</th>
          <th class="py-2">Product Name</th>
          <th class="py-2">Quantity</th>
          <th class="py-2">Price</th>
           <th class="py-2">Order Status</th>
          <th class="py-2">Actions</th>
        </tr>
      </thead>
      <tbody>
        {{#each data}}
        <tr class="border-t">
          <td class="text-center py-4">{{this.key}}</td>
          <td class="flex justify-center py-2">
            <img src="{{this.images.[0]}}" alt="Product Image" class="w-12 h-12 object-cover rounded-lg">
          </td>
          <td class="text-center py-2">{{this.productName}}</td>
          <td class="text-center py-2">{{this.quantity}}</td>
          <td class="text-center py-2">Rs. {{this.price}}</td>
          <td class="text-center py-2">{{this.orderStatus}}</td>
          <td class="text-center py-2 space-x-2">
            <button onclick="viewOrderDetails('{{this.productId}}','{{this.orderId}}')" class="px-4 py-2 bg-blue-600 text-white font-semibold rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75">
              View Order Details
            </button>
            {{#if this.isDelivered}}
            <button onclick="returnOrder('{{this.productId}}','{{this.orderId}}',{{this.quantity}})" class="px-4 py-2 bg-red-600 text-white font-semibold rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-400 focus:ring-opacity-75">
              Return Order
            </button>
            {{else}}
            <button onclick="cancelOrder('{{this.productId}}','{{this.orderId}}',{{this.quantity}})" class="px-4 py-2 bg-red-600 text-white font-semibold rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-400 focus:ring-opacity-75">
              Cancel Order
            </button>
            {{/if}}
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>
  </div>
</div>
{{else}}
<div class="container mx-auto p-8 flex flex-col items-center text-center">
  <!-- No Orders Icon -->
  <div class="mb-6">
    <svg class="w-24 h-24 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h18M9 3v12a6 6 0 006 6h3m0-12V3m0 12h3M3 3l1.752 7.486A5 5 0 009 15h4a5 5 0 004.248-2.514L21 3"></path>
    </svg>
  </div>

  <!-- Message -->
  <h2 class="text-2xl font-semibold text-gray-700 mb-2">No Orders Yet</h2>
  <p class="text-gray-500 mb-6">Looks like you haven't placed any orders yet. Start exploring our collection to place your first order.</p>

  <!-- Button -->
  <a href="/product/productlist" class="px-6 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50">
    Browse Products
  </a>
</div>
{{/if}}

<script>
  function viewOrderDetails(productId,orderId){
    window.location.href =`/users/vieworder/${productId}/${orderId}`;
  }
  function cancelOrder(productId,orderId,quantity) {
  Swal.fire({
    title: 'Are you sure?',
    text: "Do you want to cancel this order?",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'Yes, cancel it!'
  }).then((result) => {
    if (result.isConfirmed) {
      fetch(`/users/cartordercancel/${productId}/${orderId}/${quantity}`, {
        method: "POST"
      }).then((response) => {
        if (response.status){
          Swal.fire(
            'Cancelled!',
            'Your order has been cancelled.',
            'success'
          ).then(() => {
            location.reload();
          });
        } else {
          Swal.fire(
            'Error!',
            'Product could not be removed.',
            'error'
          ).then(()=>{
            location.reload();
          })
        }
      }).catch((error) => {
        Swal.fire(
          'Error!',
          'There was an error processing your request.',
          'error'
        );
      });
    }
  });
}

function returnOrder(productId, orderId,quantity) {
  Swal.fire({
    title: 'Are you sure?',
    text: 'Do you want to return this product?',
    icon: 'warning',
    showCancelButton: true,
    confirmButtonText: 'Yes, return it!',
    cancelButtonText: 'No, cancel!',
    reverseButtons: true
  }).then((result) => {
    if (result.isConfirmed) {
      fetch(`/users/returnorder/${productId}/${orderId}/${quantity}`, {
        method: "POST"
      })
      .then((response) => {
        if (response.status) {
          Swal.fire({
            icon: 'success',
            title: 'Order Returned!',
            text: 'The product has been successfully returned.',
            confirmButtonText: 'OK'
          }).then(()=>{
            location.reload();
          })
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Something went wrong, please try again later.',
            confirmButtonText: 'OK'
          }).then(()=>{
            location.reload();
          })
        }
      })
      .catch((error) => {
        Swal.fire({
          icon: 'error',
          title: 'Error!',
          text: 'There was an error processing your request.',
          confirmButtonText: 'OK'
        });
      });
    } else {
      Swal.fire({
        icon: 'info',
        title: 'Action Canceled',
        text: 'The product return has been canceled.',
        confirmButtonText: 'OK'
      });
    }
  });
}

</script>
